---
import { markdownToHtml } from '../../lib/markdown';
import Answer from './Answer.astro';
import Question from './Question.astro';

export type FAQType = {
  question: string;
  answer: string[];
};

export interface Props {
  faqs: FAQType[];
}

const { faqs } = Astro.props;

if (faqs.length === 0) {
  return '';
}
---

<div class='border-t border-white/5 py-16 sm:py-24'>
  <div class='container'>
    <div class='mb-12'>
      <div class='mb-4 flex items-center gap-2'>
        <div class='flex h-10 w-10 items-center justify-center rounded-xl bg-primary/10 ring-1 ring-primary/20'>
          <svg class='h-5 w-5 text-primary' fill='none' stroke='currentColor' viewBox='0 0 24 24'>
            <path stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z'></path>
          </svg>
        </div>
        <h2 class='text-3xl font-black text-white sm:text-4xl'>
          Frequently Asked Questions
        </h2>
      </div>
      <p class='text-base text-muted sm:text-lg'>
        Common questions and answers about this roadmap
      </p>
    </div>

    <div class='mx-auto max-w-4xl'>
      <div class='flex flex-col gap-3'>
        {
          faqs.map((faq, questionIndex) => (
            <Question isActive={questionIndex === 0} question={faq.question}>
              <Answer>
                {faq.answer.map((answer) => (
                  <p set:html={markdownToHtml(answer)} />
                ))}
              </Answer>
            </Question>
          ))
        }
      </div>
    </div>
  </div>
</div>
