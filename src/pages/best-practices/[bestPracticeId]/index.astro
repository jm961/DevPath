---
import BestPracticeHeader from '../../../components/BestPracticeHeader.astro';
import CaptchaScripts from '../../../components/Captcha/CaptchaScripts.astro';
import FrameRenderer from '../../../components/FrameRenderer/FrameRenderer.astro';
import MarkdownFile from '../../../components/MarkdownFile.astro';
import ShareIcons from '../../../components/ShareIcons/ShareIcons.astro';
import TopicOverlay from '../../../components/TopicOverlay/TopicOverlay.astro';
import UpcomingForm from '../../../components/UpcomingForm.astro';
import BaseLayout from '../../../layouts/BaseLayout.astro';
import { BestPracticeFrontmatter, getBestPracticeIds } from '../../../lib/best-pratice';
import { generateArticleSchema } from '../../../lib/jsonld-schema';

export async function getStaticPaths() {
  const bestPracticeIds = await getBestPracticeIds();

  return bestPracticeIds.map((bestPracticeId) => ({
    params: { bestPracticeId },
  }));
}

interface Params extends Record<string, string | undefined> {
  bestPracticeId: string;
}

const { bestPracticeId } = Astro.params as Params;
const bestPracticeFile = await import(`../../../data/best-practices/${bestPracticeId}/${bestPracticeId}.md`);
const bestPracticeData = bestPracticeFile.frontmatter as BestPracticeFrontmatter;

let jsonLdSchema = [];

if (bestPracticeData.schema) {
  const bestPracticeSchema = bestPracticeData.schema;
  jsonLdSchema.push(
    generateArticleSchema({
      url: `https://devpath.sh/best-practices/${bestPracticeId}`,
      headline: bestPracticeSchema.headline,
      description: bestPracticeSchema.description,
      datePublished: bestPracticeSchema.datePublished,
      dateModified: bestPracticeSchema.dateModified,
      imageUrl: bestPracticeSchema.imageUrl,
    })
  );
}

const contentContributionLink = `/feedback?url=${encodeURIComponent(`/best-practices/${bestPracticeId}`)}&type=suggestion`;
---

<BaseLayout
  permalink={`/best-practices/${bestPracticeId}`}
  title={bestPracticeData?.seo?.title}
  description={bestPracticeData.seo.description}
  keywords={bestPracticeData.seo.keywords}
  sponsor={bestPracticeData.sponsor}
  noIndex={bestPracticeData.isUpcoming}
  jsonLd={jsonLdSchema}
>
  <!-- Preload the font being used in the renderer -->
  <link rel='preload' href='/fonts/balsamiq.woff2' as='font' type='font/woff2' crossorigin slot='after-header' />

  <BestPracticeHeader
    title={bestPracticeData.title}
    description={bestPracticeData.description}
    bestPracticeId={bestPracticeId}
    isUpcoming={bestPracticeData.isUpcoming}
  />

  <div class='relative py-8 sm:py-12 lg:py-16'>
    {
      !bestPracticeData.isUpcoming && bestPracticeData.jsonUrl && (
        <div class='max-w-[1000px] container relative'>
          <ShareIcons
            description={bestPracticeData.briefDescription}
            pageUrl={`https://devpath.sh/best-practices/${bestPracticeId}`}
          />
          <TopicOverlay contentContributionLink={contentContributionLink} />

          <FrameRenderer
            resourceType={'best-practice'}
            resourceId={bestPracticeId}
            jsonUrl={bestPracticeData.jsonUrl}
            dimensions={bestPracticeData.dimensions}
          />
        </div>
      )
    }

    {
      !bestPracticeData.isUpcoming && !bestPracticeData.jsonUrl && (
        <div class='container'>
          <article class='best-practice-content-card'>
            <div class='best-practice-content-inner'>
              <MarkdownFile>
                <bestPracticeFile.Content />
              </MarkdownFile>
            </div>
          </article>
        </div>
      )
    }
  </div>

  {bestPracticeData.isUpcoming && <UpcomingForm />}

  <style>
    .best-practice-content-card {
      position: relative;
      border-radius: 24px;
      overflow: hidden;
    }

    .best-practice-content-inner {
      position: relative;
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.05) 0%,
        rgba(255, 255, 255, 0.02) 100%
      );
      border: 1px solid rgba(255, 255, 255, 0.1);
      border-radius: 24px;
      backdrop-filter: blur(20px) saturate(180%);
      padding: 2rem;
      box-shadow: 
        0 4px 16px rgba(0, 0, 0, 0.3),
        0 0 0 1px rgba(59, 130, 246, 0.05) inset;
    }

    @media (min-width: 640px) {
      .best-practice-content-inner {
        padding: 3rem;
      }
    }
  </style>
</BaseLayout>
